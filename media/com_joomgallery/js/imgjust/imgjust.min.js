class ImgJust{idealHeight=150;rowGap=0;columnGap=0;paddingLeft=0;paddingRight=0;paddingTop=0;paddingBottom=0;reload(){let t=this.container;getComputedStyle(t);let e=this.imgs,i=t.getBoundingClientRect().width-this.paddingLeft-this.paddingRight;if(i<=0)throw"ImgJust Error: No room for images. Client width is too small.";let s=[];for(var n=0;n<e.length;n++)s.push(e[n].naturalWidth*this.idealHeight/e[n].naturalHeight);let a=[],r=[];for(var o=new Map,l=new Map,d=-this.columnGap,h=0;h<e.length;h++){d+=s[h]+this.columnGap;let g=d-i;o.set(h,g*g),l.set(h,0)}a.push(o),r.push(l);for(var p=1;p<e.length;p++){o=new Map,l=new Map;for(var h=p;h<e.length;h++){d=s[h];let m=d-i;for(var f=m*m+a[p-1].get(h-1),u=h,c=h-1;c>=p;c--){d+=s[c]+this.columnGap;let y=d-i,$=y*y+a[p-1].get(c-1);$<f&&(f=$,u=c)}o.set(h,f),l.set(h,u)}a.push(o),r.push(l)}var p=0,w=p,f=a[p].get(e.length-1);for(p++;p<a.length;p++){let v=a[p].get(e.length-1);v<f&&(f=v,w=p)}for(var x=[],_=e.length,p=w;p>=0;p--){let G=_-1,R=r[p].get(G);x.unshift({start:R,end:G}),_=R}for(var B of x){for(var I=0,n=B.start;n<=B.end;n++)I+=s[n],e[n].style.marginBottom=this.rowGap+"px";let L=i-(B.end-B.start)*this.columnGap,H=Math.round(this.idealHeight*L/I);for(var J=0,n=B.start;n<B.end;n++){let E=Math.round(s[n]*L/I);J+=E+this.columnGap,e[n].style.width=E+"px",e[n].style.height=H+"px",e[n].style.marginRight=this.columnGap+"px"}e[B.end].style.width=i-J+"px",e[B.end].style.height=H+"px",e[B.end].style.marginRight="0",e[B.end].classList.add("end")}let T=x[x.length-1];for(var n=T.start;n<=T.end;n++)e[n].style.marginBottom="0",e[n].classList.add("last");for(let C of e)C.style.display="block"}addImages(t){for(let e of t)e.style.display="none",this.imgs.push(e)}constructor(t,e=[],i={}){for(var[s,n]of Object.entries(i))this[s]=n;if(!t)throw"ImgJust Error: missing first argument in constructor: container";if(!e)throw"ImgJust Error: missing second argument in constructor: imgs";this.container=t,this.imgs=[],t.style.display="flex",t.style.flexFlow="row wrap",t.style.paddingTop=this.paddingTop+"px",t.style.paddingBottom=this.paddingBottom+"px",t.style.paddingLeft=this.paddingLeft+"px",t.style.paddingRight=this.paddingRight+"px",this.addImages(e),this.reload(),addEventListener("resize",t=>this.reload())}}